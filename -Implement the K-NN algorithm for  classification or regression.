import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix,accuracy_score,classification_report
#run

data = pd.read_csv('diabetes.csv')
#run

print("Data Shape:",data.shape)
print(data.head())
#run

x=data.drop('Outcome',axis=1)
y=data['Outcome']
#run

x_train,x_test,y_train,y_test=train_test_split(
    x,y,test_size=0.25,random_state=42,stratify=y)
#run

scaler=StandardScaler()
x_train_scaled=scaler.fit_transform(x_train)
x_test_scaled=scaler.transform(x_test)
#run

k_values=range(1,21)
accuracies=[]
#run

for k in k_values:
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(x_train_scaled,y_train)
    y_pred=knn.predict(x_test_scaled)
    acc=accuracy_score(y_test,y_pred)
    accuracies.append(acc)
#run

plt.figure(figsize=(8,5))
plt.plot(k_values,accuracies,marker='o',linestyle='-')
plt.title("KNN Accuracy vs Number of Neighbors (k)")
plt.xlabel("Number Of Neighbors (k)")
plt.ylabel("Accuracy")
plt.xticks(k_values)
plt.grid(True)
plt.show()
#run

knn=KNeighborsClassifier(n_neighbors=12)
knn.fit(x_train_scaled,y_train)
#run

y_pred = knn.predict(x_test_scaled)
#run

print("\nConfusion Matrix:\n",confusion_matrix(y_test,y_pred))
print("\nAccuracy:\n",accuracy_score(y_test,y_pred))
print("\nClassification Report:\n",classification_report(y_test,y_pred))
#run
